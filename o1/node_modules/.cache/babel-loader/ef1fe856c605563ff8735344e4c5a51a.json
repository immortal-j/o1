{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\o1\\\\o1\\\\src\\\\components\\\\Coderun\\\\landing\\\\contest\\\\Report.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Box, Grid, Checkbox, AppBar, makeStyles, Button, Dialog, ListItemText, ListItem, List, Divider, Toolbar, IconButton, Typography, Slide, Paper } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport axios from \"axios\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { delete_cookie, bake_cookie } from \"sfcookies\";\nimport DataDialog from \"./DataDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    color: '#ffd79d',\n    fontSize: '20px',\n    fontWeight: 600\n  },\n  con: {\n    fontSize: \"30px\"\n  },\n  btn: {\n    backgroundColor: \"#320d3e\",\n    color: '#ffd79d',\n    fontSize: \"18px\",\n    fontWeight: 600\n  },\n  image: {\n    height: \"150px\",\n    width: \"300px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      height: \"400px\",\n      width: \"800px\"\n    }\n  },\n  appbar: {\n    position: 'relative',\n    backgroundColor: \"#320d3e\"\n  },\n  tablehead: {\n    fontSize: \"20px\",\n    fontWeight: 600,\n    color: '#ffd79d',\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"10px\"\n    }\n  },\n  headrow: {\n    backgroundColor: \"#320d3e\"\n  },\n  tablesize: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"300px\"\n    }\n  },\n  navbartext: {\n    color: '#ffd79d',\n    fontSize: '16px',\n    fontWeight: 600\n  },\n  anchr: {\n    textDecoration: \"none\"\n  },\n  tabletext: {\n    fontSize: '16px',\n    fontWeight: 600\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\n\nfunction Report(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [showDialog, setshowDialog] = useState(false);\n  const [showdemoDialog, setshowDemoDialog] = useState(false);\n  useEffect(() => {\n    setchecked();\n  }, []);\n\n  const setchecked = () => {\n    var tem = [];\n\n    for (var i = 0; i < props.x.questions.length; i++) {\n      tem.push(false);\n    }\n\n    setChecked(tem);\n  };\n\n  const handleToggle = value => () => {\n    var newChecked = [...checked];\n\n    if (newChecked[value] === false) {\n      newChecked[value] = true;\n    } else if (newChecked[value] === true) {\n      newChecked[value] = false;\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClosewithpost = () => {\n    // <DataDialog />\n    setshowDialog(true);\n    var obj = {\n      uid: props.uid,\n      questions: props.x.questions,\n      status: checked\n    };\n    axios.post(`https://coderun-temp.herokuapp.com/contest/submit/`, obj).then(function (response) {\n      props.statuschange(true);\n      delete_cookie(\"conteststatus\");\n      bake_cookie(\"conteststatus\", true);\n      setOpen(false);\n      window.location.reload();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    sm: 12,\n    justifyContent: \"center\",\n    spacing: 4,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      item: true,\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.x.contest_link,\n        target: \"_blank\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"banner.jpeg\",\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      sm: 12,\n      item: true,\n      container: true,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: classes.appbar,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: handleClose,\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: \"Contest Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 3,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          className: classes.tablesize,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                className: classes.headrow,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.tablehead,\n                    children: \"Problems\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.tablehead,\n                    children: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: props.x.questions.map(value => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: value.url,\n                      target: \"_blank\",\n                      className: classes.anchr,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        children: value.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      edge: \"end\",\n                      onChange: handleToggle(props.x.questions.indexOf(value)),\n                      checked: checked[props.x.questions.indexOf(value)]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            style: {\n              marginTop: \"45px\"\n            },\n            color: \"inherit\",\n            onClick: handleClosewithpost,\n            variant: \"contained\",\n            children: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this), showDialog ? /*#__PURE__*/_jsxDEV(DataDialog, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 27\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Report, \"wKPeiv8S7QJ+bmchNz2L8jRNPCk=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Report;\nexport default Report;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Report\");","map":{"version":3,"sources":["C:/WebDev/o1/o1/src/components/Coderun/landing/contest/Report.js"],"names":["React","useState","useEffect","Box","Grid","Checkbox","AppBar","makeStyles","Button","Dialog","ListItemText","ListItem","List","Divider","Toolbar","IconButton","Typography","Slide","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","axios","CloseIcon","delete_cookie","bake_cookie","DataDialog","useStyles","theme","title","marginLeft","spacing","flex","color","fontSize","fontWeight","con","btn","backgroundColor","image","height","width","breakpoints","up","appbar","position","tablehead","down","headrow","tablesize","maxWidth","navbartext","anchr","textDecoration","tabletext","Transition","forwardRef","props","ref","Report","classes","checked","setChecked","open","setOpen","showDialog","setshowDialog","showdemoDialog","setshowDemoDialog","setchecked","tem","i","x","questions","length","push","handleToggle","value","newChecked","handleClose","handleClosewithpost","obj","uid","status","post","then","response","statuschange","window","location","reload","catch","error","console","log","handleClick","contest_link","table","map","url","indexOf","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Checkbox,\r\n  AppBar,\r\n  makeStyles,\r\n  Button,\r\n  Dialog,\r\n  ListItemText,\r\n  ListItem,\r\n  List,\r\n  Divider,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Slide,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport axios from \"axios\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { delete_cookie, bake_cookie } from \"sfcookies\";\r\nimport DataDialog from \"./DataDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n \r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n    color:'#ffd79d',\r\n    fontSize:'20px',\r\n    fontWeight:600,\r\n\r\n  },\r\n  con: {\r\n    fontSize: \"30px\",\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#320d3e\",\r\n    color:'#ffd79d',\r\n    fontSize: \"18px\",\r\n    fontWeight: 600,\r\n  },\r\n  image: {\r\n    height: \"150px\",\r\n    width: \"300px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"400px\",\r\n      width: \"800px\",\r\n    },\r\n  },\r\n  appbar:{\r\n    position:'relative',\r\n    backgroundColor:\"#320d3e\",\r\n  },\r\n  tablehead: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 600,\r\n    color:'#ffd79d',\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  headrow: {\r\n    backgroundColor: \"#320d3e\",\r\n  },\r\n  tablesize: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: \"300px\",\r\n    },\r\n  },\r\n  navbartext:{\r\n    color:'#ffd79d',\r\n    fontSize:'16px',\r\n    fontWeight:600,\r\n  },\r\n  anchr: {\r\n    textDecoration: \"none\",\r\n  },\r\n  tabletext:{\r\n    fontSize:'16px',\r\n    fontWeight:600,\r\n  }\r\n}));\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Report(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [showDialog, setshowDialog] = useState(false);\r\n  const [showdemoDialog, setshowDemoDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setchecked();\r\n  }, []);\r\n  const setchecked = () => {\r\n    var tem = [];\r\n\r\n    for (var i = 0; i < props.x.questions.length; i++) {\r\n      tem.push(false);\r\n    }\r\n    setChecked(tem);\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    var newChecked = [...checked];\r\n\r\n    if (newChecked[value] === false) {\r\n      newChecked[value] = true;\r\n    } else if (newChecked[value] === true) {\r\n      newChecked[value] = false;\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClosewithpost = () => {\r\n    // <DataDialog />\r\n    setshowDialog(true);\r\n    var obj = {\r\n      uid: props.uid,\r\n      questions: props.x.questions,\r\n      status: checked,\r\n    };\r\n    axios\r\n      .post(`https://coderun-temp.herokuapp.com/contest/submit/`, obj)\r\n\r\n      .then(function (response) {\r\n        props.statuschange(true);\r\n        delete_cookie(\"conteststatus\");\r\n        bake_cookie(\"conteststatus\", true);\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  return (\r\n    <Grid item container xs={12} sm={12} justifyContent=\"center\" spacing={4}>\r\n      <Grid xs={12} sm={12} item container justifyContent=\"center\">\r\n        <a href={props.x.contest_link} target=\"_blank\">\r\n          {\" \"}\r\n          <img src=\"banner.jpeg\" className={classes.image} />\r\n        </a>\r\n        {/* <Typography className={classes.con}>Here is your Today's Contest Link<br/> </Typography> */}\r\n\r\n        {/* <Button className={classes.btn} href={props.x.contest_link}>Go to Contest</Button> */}\r\n      </Grid>\r\n      <Grid xs={12} sm={12} item container justifyContent=\"center\">\r\n        <Button className={classes.btn} onClick={handleClick}>\r\n        Submit\r\n        </Button>\r\n      </Grid>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appbar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n             Contest Questions\r\n            </Typography>\r\n            {/* <Button onClick={handleHEllo}>\r\n              Hello\r\n            </Button>\r\n            {showdemoDialog?\r\n            <DataDialog/>\r\n            :\r\n            \"\"} */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <Box m={10}>\r\n          <Grid container justifyContent=\"center\">\r\n            {props.x.questions.map((value) => {\r\n              return (\r\n                <Grid item container>\r\n                  <Grid item container xs={6} sm={6}>\r\n                    <a href={value.url} target=\"_blank\">\r\n                      <Button>{value.title}</Button>\r\n                    </a>\r\n                  </Grid>\r\n                  <Grid item container justifyContent=\"flex-end\" xs={6} sm={6}>\r\n                    <Checkbox\r\n                      edge=\"end\"\r\n                      onChange={handleToggle(props.x.questions.indexOf(value))}\r\n                      checked={checked[props.x.questions.indexOf(value)]}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n            <Button\r\n              style={{ marginTop: \"45px\" }}\r\n              color=\"inherit\"\r\n              onClick={handleClosewithpost}\r\n              variant=\"contained\"\r\n            >\r\n              Get Analysis\r\n            </Button>\r\n           \r\n          </Grid>\r\n        </Box> */}\r\n\r\n        <Box m={3}>\r\n          <TableContainer component={Paper} className={classes.tablesize}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableBody>\r\n                <TableRow className={classes.headrow}>\r\n                  <TableCell>\r\n                    <Typography className={classes.tablehead}>\r\n                      Problems\r\n                    </Typography>\r\n                  </TableCell>\r\n                 \r\n                  <TableCell>\r\n                    <Typography className={classes.tablehead}>\r\n                      status\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n              <TableBody>\r\n                {props.x.questions.map((value) => {\r\n                  return (\r\n                    <TableRow>\r\n                      <TableCell>\r\n                      <a href={value.url} target=\"_blank\" className={classes.anchr}>\r\n                      <Button>{value.title}</Button>\r\n                    </a>\r\n                      </TableCell>\r\n                      {/* <TableCell>\r\n                        <Typography>\r\n                          {props.x.ratings[props.x.questions.indexOf(value)]}\r\n                        </Typography>\r\n                      </TableCell> */}\r\n                      <TableCell>\r\n                      <Checkbox\r\n                      edge=\"end\"\r\n                      onChange={handleToggle(props.x.questions.indexOf(value))}\r\n                      checked={checked[props.x.questions.indexOf(value)]}\r\n                    />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Grid container justifyContent='center'>\r\n          <Button\r\n          className={classes.btn}\r\n              style={{ marginTop: \"45px\"  }}\r\n              color=\"inherit\"\r\n              onClick={handleClosewithpost}\r\n              variant=\"contained\"\r\n            >\r\n             SUBMIT\r\n            </Button>\r\n            {showDialog ? <DataDialog /> : \"\"}\r\n            </Grid>\r\n        </Box>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n"]},"metadata":{},"sourceType":"module"}