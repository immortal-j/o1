{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\o1\\\\o1\\\\src\\\\components\\\\Coderun\\\\Practice\\\\practice_loader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport NewCard from \"./practicecard\";\nimport axios from \"axios\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Practiceloader(props) {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const [temp, setTemp] = useState([]);\n  const [pagenumber, setPagenumber] = useState(0);\n  const [flag, setFlag] = useState(0);\n  const [pagecount, setPageCount] = useState(0);\n  const usersperpage = 7;\n  const pagevisited = pagenumber * usersperpage;\n  var displayusers;\n  useEffect(() => {\n    getdata();\n  }, []);\n  useEffect(() => {\n    displayusers = arr.slice(pagevisited, pagevisited + usersperpage);\n    setTemp(displayusers);\n  }, [pagenumber]);\n\n  async function getdata() {\n    await axios.post(`https://coderun-temp.herokuapp.com/diagnosis/`, {\n      uid: props.uid\n    }).then(function (response) {\n      // console.log(response.data)\n      setArr(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  if (arr.length > 0 && flag == 0) {\n    // console.log(arr);\n    displayusers = arr.slice(pagevisited, pagevisited + usersperpage);\n    setFlag(1);\n    setPageCount(Math.ceil(arr.length / usersperpage));\n    setTemp(displayusers);\n  }\n\n  function markque(tosend) {\n    console.log(tosend);\n    axios.post(`https://coderun-temp.herokuapp.com/update/`, tosend).then(function (response) {\n      console.log(response);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  function changePage({\n    selected\n  }) {\n    // console.log(selected);\n    setPagenumber(selected);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: \"20px\"\n            },\n            children: [\" \", \"Practice problems will be given after 5-6 contests\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          previousLabel: \"Prev\",\n          nextLabel: \"Next\",\n          pageCount: pagecount,\n          onPageChange: changePage,\n          containerClassName: \"paginationbttns\",\n          previousLinkClassName: \"prevbttn\",\n          pageLinkClassName: \"pagebttn\",\n          nextLinkClassName: \"nextbttn\",\n          disabledClassName: \"paginationdisabled\",\n          activeClassName: \"paginationActive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Practiceloader, \"QtzZQvDkZ68keV/FysWERd1m9q0=\");\n\n_c = Practiceloader;\nexport default Practiceloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practiceloader\");","map":{"version":3,"sources":["C:/WebDev/o1/o1/src/components/Coderun/Practice/practice_loader.js"],"names":["React","useEffect","useState","Box","Grid","Typography","NewCard","axios","ReactPaginate","Practiceloader","props","arr","setArr","temp","setTemp","pagenumber","setPagenumber","flag","setFlag","pagecount","setPageCount","usersperpage","pagevisited","displayusers","getdata","slice","post","uid","then","response","data","catch","error","console","log","length","Math","ceil","markque","tosend","err","changePage","selected","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport NewCard from \"./practicecard\";\r\nimport axios from \"axios\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nfunction Practiceloader(props) {\r\n  const [arr, setArr] = useState([]);\r\n  const [temp, setTemp] = useState([]);\r\n  const [pagenumber, setPagenumber] = useState(0);\r\n  const [flag, setFlag] = useState(0);\r\n  const [pagecount, setPageCount] = useState(0);\r\n  const usersperpage = 7;\r\n  const pagevisited = pagenumber * usersperpage;\r\n  var displayusers;\r\n  useEffect(() => {\r\n    getdata();\r\n  }, []);\r\n  useEffect(() => {\r\n    displayusers = arr.slice(pagevisited, pagevisited + usersperpage);\r\n    setTemp(displayusers);\r\n  }, [pagenumber]);\r\n\r\n  async function getdata() {\r\n    await axios\r\n      .post(`https://coderun-temp.herokuapp.com/diagnosis/`, {\r\n        uid: props.uid,\r\n      })\r\n      .then(function (response) {\r\n        // console.log(response.data)\r\n        setArr(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  if (arr.length > 0 && flag == 0) {\r\n    // console.log(arr);\r\n    displayusers = arr.slice(pagevisited, pagevisited + usersperpage);\r\n    setFlag(1);\r\n    setPageCount(Math.ceil(arr.length / usersperpage));\r\n    setTemp(displayusers);\r\n  }\r\n  function markque(tosend) {\r\n    console.log(tosend);\r\n    axios\r\n      .post(`https://coderun-temp.herokuapp.com/update/`, tosend)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        \r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function changePage({ selected }) {\r\n    // console.log(selected);\r\n    setPagenumber(selected);\r\n  }\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid container justifyContent=\"center\">\r\n          {/* {temp.map((x) => {\r\n            return (\r\n              \r\n              <Grid  item xs={12} sm={4} container justifyContent=\"center\">\r\n                <NewCard key={x.id} x={x} uid={props.uid} ts={markque} />\r\n              </Grid>\r\n            );\r\n          })} */}\r\n          <Typography>\r\n            <h1 style={{ fontSize: \"20px\" }}>\r\n              {\" \"}\r\n              Practice problems will be given after 5-6 contests\r\n            </h1>\r\n          </Typography>\r\n          <ReactPaginate\r\n            previousLabel={\"Prev\"}\r\n            nextLabel={\"Next\"}\r\n            pageCount={pagecount}\r\n            onPageChange={changePage}\r\n            containerClassName={\"paginationbttns\"}\r\n            previousLinkClassName={\"prevbttn\"}\r\n            pageLinkClassName={\"pagebttn\"}\r\n            nextLinkClassName={\"nextbttn\"}\r\n            disabledClassName={\"paginationdisabled\"}\r\n            activeClassName={\"paginationActive\"}\r\n          />\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Practiceloader;\r\n"]},"metadata":{},"sourceType":"module"}