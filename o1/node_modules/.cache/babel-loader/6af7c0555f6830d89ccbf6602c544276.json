{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\o1\\\\o1\\\\src\\\\components\\\\Coderun\\\\Practice\\\\practicecard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Box, Typography, Grid, Button, makeStyles, Paper } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Progress from \"./practice_progress\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Practicelottie from \"./practicelottie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  ncroot: {\n    maxWidth: 450\n  },\n  coursecontainer: {\n    maxWidth: 320,\n    [theme.breakpoints.up(\"sm\")]: {\n      maxWidth: 600\n    }\n  },\n  course: {\n    backgroundColor: \"#fff\",\n    borderRadius: \" 10px\",\n    boxShadow: \" 0 10px 10px rgba(0, 0, 0, 0.2)\",\n    display: \"flex\",\n    minHeight: 100,\n    margin: \"20px\",\n    overflow: \"hidden\",\n    [theme.breakpoints.up(\"sm\")]: {\n      minHeight: 100\n    }\n  },\n  courseinfo: {\n    padding: \"30px\",\n    position: \"relative\",\n    width: \"100%\"\n  },\n  desfont: {\n    fontSize: 15\n  },\n  coursepreview: {\n    backgroundColor: \"#320d3e\",\n    color: \"#fff\",\n    padding: \"30px\",\n    minWidth: \"60px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      minWidth: \"70px\"\n    }\n  },\n  btn: {\n    borderRadius: 25,\n    fontSize: 9,\n    width: \"90px\",\n    fontSize: \"15px\"\n  },\n  dlgtitle: {\n    backgroundColor: \"#000\",\n    flex: 1,\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: \"35px\",\n    marginBottom: \"2px\",\n    fontFamily: \"Roboto,sans-serif\",\n    fontWeight: 600\n  },\n  dlgcontent: {\n    margin: \"15px 8px 8px 8px\",\n    fontFamily: \"Roboto,sans-serif\",\n    fontSize: \"25px\"\n  },\n  lefttitle: {\n    fontSize: 20\n  },\n  space: {\n    flexGrow: 1\n  },\n  cardhead: {\n    textAlign: \"center\",\n    color: \"#ffd79d\",\n    fontSize: \"26px\",\n    fontWeight: 600,\n    fontFamily: \"Roboto,sans-serif\"\n  },\n  topic: {\n    marginTop: \"40px\",\n    color: \"#f162ff\",\n    fontSize: \"24px\",\n    fontWeight: 600,\n    textAlign: \"center\"\n  },\n  fullCard: {\n    height: \"175px\",\n    backgroundColor: \"#320d3e\"\n  },\n  appbar: {\n    position: \"relative\",\n    backgroundColor: \"#320d3e\"\n  },\n  tablehead: {\n    fontSize: \"20px\",\n    fontWeight: 600,\n    color: \"#ffd79d\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"10px\"\n    }\n  },\n  headrow: {\n    backgroundColor: \"#320d3e\"\n  },\n  tablesize: {\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: \"300px\"\n    }\n  },\n  navbartext: {\n    color: \"#ffd79d\",\n    fontSize: \"16px\",\n    fontWeight: 600\n  },\n  anchr: {\n    textDecoration: \"none\"\n  },\n  tabletext: {\n    fontSize: \"16px\",\n    fontWeight: 600\n  },\n  hide: {\n    display: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"block\"\n    }\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst Alert = /*#__PURE__*/React.forwardRef(_c3 = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n});\n_c4 = Alert;\n\nfunction NewCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [tosend, setTosend] = useState([]);\n  const [checked, setChecked] = React.useState(props.x.status);\n  const [open, setOpen] = React.useState(false);\n  const [snack, setsnack] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleToggle = value => () => {\n    var newChecked = [...checked];\n    var tos = [...tosend];\n\n    if (newChecked[value] === false) {\n      newChecked[value] = true;\n      tos.push(props.x.problems[value]);\n    } else if (newChecked[value] === true && props.x.status[value] === false) {\n      newChecked[value] = false;\n      tos.splice(tos.indexOf(props.x.problems[value]), 1);\n    }\n\n    setTosend(tos);\n    setChecked(newChecked);\n  };\n\n  const handleClick = () => {\n    props.ts({\n      uid: props.uid,\n      day: props.x.id,\n      problems: tosend\n    });\n    setTimeout(() => {\n      handleClose();\n      setsnack(true);\n      window.location.reload();\n    }, 1000);\n  };\n\n  const handleClosesnack = () => {\n    setsnack(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.coursecontainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.course,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.coursepreview,\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: classes.lefttitle,\n            children: [\"Day\", props.x.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.courseinfo,\n          children: [/*#__PURE__*/_jsxDEV(Progress, {\n            solved: props.x.solved,\n            length: props.x.names.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.btn,\n            onClick: handleClickOpen,\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"Solve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          fullScreen: true,\n          open: open,\n          onClose: handleClose,\n          TransitionComponent: Transition,\n          children: [/*#__PURE__*/_jsxDEV(AppBar, {\n            sx: {\n              position: \"relative\"\n            },\n            className: classes.appbar,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"start\",\n                color: \"inherit\",\n                onClick: handleClose,\n                \"aria-label\": \"close\",\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                className: classes.navbartext,\n                children: [\"Day\", props.x.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.space\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                autoFocus: true,\n                color: \"inherit\",\n                onClick: handleClick,\n                className: classes.navbartext,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 12,\n                sm: 4,\n                justifyContent: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.fullCard,\n                  sx: {\n                    minWidth: 300\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.cardhead,\n                      children: \"Weakest Topic\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.topic,\n                      children: props.x.weakest_topic\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 0,\n                sm: 4,\n                justifyContent: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Practicelottie, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 12,\n                sm: 4,\n                justifyContent: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: classes.fullCard,\n                  sx: {\n                    minWidth: 300\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.cardhead,\n                      variant: \"h5\",\n                      component: \"div\",\n                      children: \"Target Rating\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.topic,\n                      children: props.x.target_rating\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 0,\n                sm: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 4,\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              className: classes.tablesize,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: classes.table,\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableBody, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    className: classes.headrow,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.tablehead,\n                        children: \"Problems\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.tablehead,\n                        children: \"Rating\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classes.tablehead,\n                        children: \"status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: props.x.problems.map(value => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          className: classes.anchr,\n                          href: value,\n                          target: \"_blank\",\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: classes.btn2,\n                            children: /*#__PURE__*/_jsxDEV(Typography, {\n                              className: classes.tabletext,\n                              children: props.x.names[props.x.problems.indexOf(value)]\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 363,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 362,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 357,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          children: props.x.ratings[props.x.problems.indexOf(value)]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          edge: \"end\",\n                          onChange: handleToggle(props.x.problems.indexOf(value)),\n                          checked: checked[props.x.problems.indexOf(value)]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 379,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: snack,\n          onClose: handleClosesnack,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: handleClosesnack,\n            severity: \"success\",\n            sx: {\n              width: \"100%\"\n            },\n            children: \"Submitted!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewCard, \"WAem7nX3FZZJQT5ardPpio0jono=\", false, function () {\n  return [useStyles];\n});\n\n_c5 = NewCard;\nexport default NewCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"Alert$React.forwardRef\");\n$RefreshReg$(_c4, \"Alert\");\n$RefreshReg$(_c5, \"NewCard\");","map":{"version":3,"sources":["C:/WebDev/o1/o1/src/components/Coderun/Practice/practicecard.js"],"names":["React","useState","Box","Typography","Grid","Button","makeStyles","Paper","Dialog","Slide","AppBar","Toolbar","IconButton","CloseIcon","Checkbox","Snackbar","MuiAlert","Progress","Card","CardActions","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Practicelottie","useStyles","theme","ncroot","maxWidth","coursecontainer","breakpoints","up","course","backgroundColor","borderRadius","boxShadow","display","minHeight","margin","overflow","courseinfo","padding","position","width","desfont","fontSize","coursepreview","color","minWidth","btn","dlgtitle","flex","textAlign","marginBottom","fontFamily","fontWeight","dlgcontent","lefttitle","space","flexGrow","cardhead","topic","marginTop","fullCard","height","appbar","tablehead","down","headrow","tablesize","navbartext","anchr","textDecoration","tabletext","hide","Transition","forwardRef","props","ref","Alert","NewCard","classes","tosend","setTosend","checked","setChecked","x","status","open","setOpen","snack","setsnack","handleClickOpen","handleClose","handleToggle","value","newChecked","tos","push","problems","splice","indexOf","handleClick","ts","uid","day","id","setTimeout","window","location","reload","handleClosesnack","solved","names","length","weakest_topic","target_rating","table","map","btn2","ratings"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Progress from \"./practice_progress\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Practicelottie from \"./practicelottie\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  ncroot: {\r\n    maxWidth: 450,\r\n  },\r\n  coursecontainer: {\r\n    maxWidth: 320,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      maxWidth: 600,\r\n    },\r\n  },\r\n  course: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: \" 10px\",\r\n    boxShadow: \" 0 10px 10px rgba(0, 0, 0, 0.2)\",\r\n    display: \"flex\",\r\n    minHeight: 100,\r\n    margin: \"20px\",\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minHeight: 100,\r\n    },\r\n  },\r\n  courseinfo: {\r\n    padding: \"30px\",\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n  },\r\n  desfont: {\r\n    fontSize: 15,\r\n  },\r\n  coursepreview: {\r\n    backgroundColor: \"#320d3e\",\r\n    color: \"#fff\",\r\n    padding: \"30px\",\r\n    minWidth: \"60px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth: \"70px\",\r\n    },\r\n  },\r\n  btn: {\r\n    borderRadius: 25,\r\n    fontSize: 9,\r\n    width: \"90px\",\r\n    fontSize: \"15px\",\r\n  },\r\n  dlgtitle: {\r\n    backgroundColor: \"#000\",\r\n    flex: 1,\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: \"35px\",\r\n    marginBottom: \"2px\",\r\n    fontFamily: \"Roboto,sans-serif\",\r\n    fontWeight: 600,\r\n  },\r\n  dlgcontent: {\r\n    margin: \"15px 8px 8px 8px\",\r\n    fontFamily: \"Roboto,sans-serif\",\r\n    fontSize: \"25px\",\r\n  },\r\n  lefttitle: {\r\n    fontSize: 20,\r\n  },\r\n  space: {\r\n    flexGrow: 1,\r\n  },\r\n  cardhead: {\r\n    textAlign: \"center\",\r\n    color: \"#ffd79d\",\r\n    fontSize: \"26px\",\r\n    fontWeight: 600,\r\n    fontFamily: \"Roboto,sans-serif\",\r\n  },\r\n  topic: {\r\n    marginTop: \"40px\",\r\n    color: \"#f162ff\",\r\n    fontSize: \"24px\",\r\n    fontWeight: 600,\r\n    textAlign: \"center\",\r\n  },\r\n  fullCard: {\r\n    height: \"175px\",\r\n    backgroundColor: \"#320d3e\",\r\n  },\r\n  appbar: {\r\n    position: \"relative\",\r\n    backgroundColor: \"#320d3e\",\r\n  },\r\n  tablehead: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 600,\r\n    color: \"#ffd79d\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  headrow: {\r\n    backgroundColor: \"#320d3e\",\r\n  },\r\n  tablesize: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      maxWidth: \"300px\",\r\n    },\r\n  },\r\n  navbartext: {\r\n    color: \"#ffd79d\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n  },\r\n  anchr: {\r\n    textDecoration: \"none\",\r\n  },\r\n  tabletext: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction NewCard(props) {\r\n  const classes = useStyles();\r\n  const [tosend, setTosend] = useState([]);\r\n  const [checked, setChecked] = React.useState(props.x.status);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snack, setsnack] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    var newChecked = [...checked];\r\n    var tos = [...tosend];\r\n\r\n    if (newChecked[value] === false) {\r\n      newChecked[value] = true;\r\n      tos.push(props.x.problems[value]);\r\n    } else if (newChecked[value] === true && props.x.status[value] === false) {\r\n      newChecked[value] = false;\r\n      tos.splice(tos.indexOf(props.x.problems[value]), 1);\r\n    }\r\n    setTosend(tos);\r\n    setChecked(newChecked);\r\n  };\r\n  const handleClick = () => {\r\n    props.ts({ uid: props.uid, day: props.x.id, problems: tosend });\r\n    \r\n    setTimeout(()=>{\r\n      handleClose();\r\n      setsnack(true);\r\n      window.location.reload();\r\n    },1000)\r\n   \r\n    \r\n  };\r\n  const handleClosesnack = () => {\r\n    setsnack(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.coursecontainer}>\r\n        <div className={classes.course}>\r\n          <div className={classes.coursepreview}>\r\n            <h6 className={classes.lefttitle}>Day{props.x.id}</h6>\r\n          </div>\r\n          <div className={classes.courseinfo}>\r\n            {/* {console.log(props.x)} */}\r\n            <Progress solved={props.x.solved} length={props.x.names.length} />\r\n            <br />\r\n            <Button\r\n              className={classes.btn}\r\n              onClick={handleClickOpen}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Solve\r\n            </Button>\r\n          </div>\r\n\r\n          <Dialog\r\n            fullScreen\r\n            open={open}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n          >\r\n            <AppBar sx={{ position: \"relative\" }} className={classes.appbar}>\r\n              <Toolbar>\r\n                <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  onClick={handleClose}\r\n                  aria-label=\"close\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  component=\"div\"\r\n                  className={classes.navbartext}\r\n                >\r\n                  Day{props.x.id}\r\n                </Typography>\r\n                <div className={classes.space}></div>\r\n                <Button\r\n                  autoFocus\r\n                  color=\"inherit\"\r\n                  onClick={handleClick}\r\n                  className={classes.navbartext}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <Box m={1}>\r\n              <Grid item container spacing={1}>\r\n                <Grid item container xs={12} sm={4} justifyContent=\"center\">\r\n                  <Card className={classes.fullCard} sx={{ minWidth: 300 }}>\r\n                    <CardContent>\r\n                      <Typography className={classes.cardhead}>\r\n                        Weakest Topic\r\n                      </Typography>\r\n                      <Typography className={classes.topic}>\r\n                        {props.x.weakest_topic}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item container xs={0} sm={4} justifyContent=\"center\">\r\n                  <Practicelottie />\r\n                </Grid>\r\n                <Grid item container xs={12} sm={4} justifyContent=\"center\">\r\n                  <Card className={classes.fullCard} sx={{ minWidth: 300 }}>\r\n                    <CardContent>\r\n                      <Typography\r\n                        className={classes.cardhead}\r\n                        variant=\"h5\"\r\n                        component=\"div\"\r\n                      >\r\n                        Target Rating\r\n                      </Typography>\r\n                      <Typography className={classes.topic}>\r\n                        {props.x.target_rating}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item container xs={0} sm={2}></Grid>\r\n              </Grid>\r\n\r\n              {/* {/* <Grid container justifyContent=\"center\"> */}\r\n              {/* {console.log(props.x)} */}\r\n              {/* {props.x.problems.map((value) => {\r\n                  return (\r\n                    <Grid item container>\r\n                      <Grid item container xs={6} sm={6}>\r\n                        <a href={value} target=\"_blank\">\r\n                          <Button>\r\n                            {props.x.names[props.x.problems.indexOf(value)]}\r\n                          </Button>\r\n                        </a>\r\n                      </Grid>\r\n                      <Grid\r\n                        item\r\n                        container\r\n                        justifyContent=\"flex-end\"\r\n                        xs={6}\r\n                        sm={6}\r\n                      >\r\n                        <Checkbox\r\n                          edge=\"end\"\r\n                          onChange={handleToggle(\r\n                            props.x.problems.indexOf(value)\r\n                          )}\r\n                          checked={checked[props.x.problems.indexOf(value)]}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  );\r\n                })}\r\n              </Grid> */}\r\n            </Box>\r\n            <Box m={4}>\r\n              <TableContainer component={Paper} className={classes.tablesize}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                  <TableBody>\r\n                    <TableRow className={classes.headrow}>\r\n                      <TableCell>\r\n                        <Typography className={classes.tablehead}>\r\n                          Problems\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography className={classes.tablehead}>\r\n                          Rating\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Typography className={classes.tablehead}>\r\n                          status\r\n                        </Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                  <TableBody>\r\n                    {props.x.problems.map((value) => {\r\n                      return (\r\n                        <TableRow>\r\n                          <TableCell>\r\n                            <a\r\n                              className={classes.anchr}\r\n                              href={value}\r\n                              target=\"_blank\"\r\n                            >\r\n                              <Button className={classes.btn2}>\r\n                                <Typography className={classes.tabletext}>\r\n                                  {\r\n                                    props.x.names[\r\n                                      props.x.problems.indexOf(value)\r\n                                    ]\r\n                                  }\r\n                                </Typography>\r\n                              </Button>\r\n                            </a>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Typography>\r\n                              {props.x.ratings[props.x.problems.indexOf(value)]}\r\n                            </Typography>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Checkbox\r\n                              edge=\"end\"\r\n                              onChange={handleToggle(\r\n                                props.x.problems.indexOf(value)\r\n                              )}\r\n                              checked={checked[props.x.problems.indexOf(value)]}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Box>\r\n          </Dialog>\r\n\r\n          <Snackbar open={snack} onClose={handleClosesnack}>\r\n            <Alert\r\n              onClose={handleClosesnack}\r\n              severity=\"success\"\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              Submitted!\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCard;\r\n"]},"metadata":{},"sourceType":"module"}