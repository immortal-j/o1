{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\o1\\\\o1\\\\src\\\\components\\\\Coderun\\\\landing\\\\contest\\\\DataDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport HashLoader from \"react-spinners/HashLoader\";\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = [\"fetching your data...\", \"creating your analysis...\", \"Showing it to you...\"];\n\nconst Loader = props => {\n  _s();\n\n  const {\n    messages\n  } = props;\n  const [messageIndex, setMessageIndex] = React.useState(0);\n  React.useEffect(() => {\n    let timeout;\n\n    if (messageIndex < messages.length - 1) {\n      timeout = setTimeout(() => setMessageIndex(messageIndex + 1), 1000);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [messages, messageIndex]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    item: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 0,\n      sm: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 12,\n      sm: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 0,\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 12,\n        sm: 10,\n        justifyContent: \"center\",\n        style: {\n          textAlign: 'center'\n        },\n        children: messages[messageIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        xs: 0,\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      xs: 0,\n      sm: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Loader, \"pQxPLBHqPp7jggV+6yas1n6qJTo=\");\n\n_c = Loader;\nconst Transition = /*#__PURE__*/React.forwardRef(_c2 = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n});\n_c3 = Transition;\nexport default function AlertDialogSlide() {\n  _s2();\n\n  const [open, setOpen] = React.useState(true);\n  const [loading, setLoading] = useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      disableBackdropClick: true,\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AnalysisLoader\",\n        children: /*#__PURE__*/_jsxDEV(HashLoader, {\n          color: \"#8739f9\",\n          loading: loading,\n          size: 85\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          messages: messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AlertDialogSlide, \"pJLUP5u/LI0KBr86I9vNDzKd5Bk=\");\n\n_c4 = AlertDialogSlide;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Loader\");\n$RefreshReg$(_c2, \"Transition$React.forwardRef\");\n$RefreshReg$(_c3, \"Transition\");\n$RefreshReg$(_c4, \"AlertDialogSlide\");","map":{"version":3,"sources":["C:/WebDev/o1/o1/src/components/Coderun/landing/contest/DataDialog.js"],"names":["React","useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","HashLoader","Grid","messages","Loader","props","messageIndex","setMessageIndex","timeout","length","setTimeout","clearTimeout","textAlign","Transition","forwardRef","ref","AlertDialogSlide","open","setOpen","loading","setLoading","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\nimport {Grid} from '@material-ui/core'\r\n\r\nconst messages = [\"fetching your data...\", \"creating your analysis...\", \"Showing it to you...\"];\r\n\r\n\r\nconst Loader = props => {\r\n  const { messages } = props;\r\n  const [messageIndex, setMessageIndex] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    let timeout;\r\n    if (messageIndex < messages.length - 1) {\r\n      timeout = setTimeout(() => setMessageIndex(messageIndex + 1), 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [messages, messageIndex]);\r\n  return <Grid container item>\r\n  <Grid container xs={0} sm={3} >\r\n  </Grid>\r\n  <Grid item container xs={12} sm={6}>\r\n    <Grid item container xs={0} sm={1}></Grid>\r\n    <Grid item container xs={12} sm={10} justifyContent='center' style={{textAlign:'center'}} >{messages[messageIndex]}</Grid>\r\n    <Grid item container xs={0} sm={1}></Grid>\r\n  </Grid>\r\n  <Grid item container xs={0} sm={3} >\r\n  </Grid>\r\n  </Grid> \r\n};\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(true);\r\n  const [loading,setLoading] = useState(true);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog \r\n        disableBackdropClick \r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <div className=\"AnalysisLoader\" >\r\n        <HashLoader color={\"#8739f9\"} loading={loading} size={85}   />\r\n        </div>\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          <Loader messages={messages} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}