{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDev\\\\o1\\\\o1\\\\src\\\\components\\\\Coderun\\\\landing\\\\Diagnosis_table\\\\diagtable2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Box, Paper, makeStyles, Typography, Button, Checkbox, Container } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  wi: {\n    border: \"1px solid black\"\n  },\n  btn: {\n    backgroundColor: \"#8739f9\",\n    \"&:hover\": {\n      backgroundColor: \"#f50057\"\n    },\n    color: \"#fff\"\n  },\n  anchr: {\n    textDecoration: \"none\"\n  },\n  btn2: {\n    fontSize: \"18px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"10px\"\n    }\n  },\n  tablehead: {\n    fontSize: \"20px\",\n    fontWeight: 600,\n    color: \"#fff\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"10px\"\n    }\n  },\n  headrow: {\n    backgroundColor: \"#8739f9\"\n  },\n  tablesize: {\n    [theme.breakpoints.down(\"sm\")]: {// maxWidth: \"300px\",\n    }\n  }\n}));\n\nfunction Diagtable(props) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = useState(props.x.status);\n  const [tosend, setTosend] = useState([]);\n\n  const handleToggle = value => () => {\n    var newChecked = [...checked];\n    var tos = [...tosend];\n\n    if (newChecked[value] === false) {\n      newChecked[value] = true;\n      tos.push(props.x.problems[value]);\n    } else if (newChecked[value] === true && props.x.status[value] === false) {\n      newChecked[value] = false;\n      tos.splice(tos.indexOf(props.x.problems[value]), 1);\n    }\n\n    setTosend(tos);\n    setChecked(newChecked);\n  };\n\n  const handleClick = () => {\n    window.location.reload();\n    props.mark({\n      uid: props.uid,\n      day: props.x.id,\n      problems: tosend\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tablesize,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableBody, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.headrow,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.tablehead,\n                children: \"Problems\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.tablehead,\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.tablehead,\n                children: \"status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.x.problems.map(value => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: classes.anchr,\n                  href: value,\n                  target: \"_blank\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.btn2,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: [\" \", props.x.names[props.x.problems.indexOf(value)]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: props.x.ratings[props.x.problems.indexOf(value)]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  edge: \"end\",\n                  onChange: handleToggle(props.x.problems.indexOf(value)),\n                  checked: checked[props.x.problems.indexOf(value)]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      sm: 12,\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.btn,\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Diagtable, \"C1FATpQwl8//6liNnESRm3FqPUQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Diagtable;\nexport default Diagtable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Diagtable\");","map":{"version":3,"sources":["C:/WebDev/o1/o1/src/components/Coderun/landing/Diagnosis_table/diagtable2.js"],"names":["React","useEffect","useState","Grid","Box","Paper","makeStyles","Typography","Button","Checkbox","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","useStyles","theme","wi","border","btn","backgroundColor","color","anchr","textDecoration","btn2","fontSize","breakpoints","down","tablehead","fontWeight","headrow","tablesize","Diagtable","props","classes","checked","setChecked","x","status","tosend","setTosend","handleToggle","value","newChecked","tos","push","problems","splice","indexOf","handleClick","window","location","reload","mark","uid","day","id","table","map","names","ratings"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,QAPF,EAQEC,SARF,QASO,mBATP;AAUA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AACvCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,MAAM,EAAE;AADN,GADmC;AAIvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,eAAe,EAAE,SADd;AAEH,eAAW;AACTA,MAAAA,eAAe,EAAE;AADR,KAFR;AAKHC,IAAAA,KAAK,EAAE;AALJ,GAJkC;AAWvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,cAAc,EAAE;AADX,GAXgC;AAcvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,MADN;AAGJ,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,QAAQ,EAAE;AADoB;AAH5B,GAdiC;AAqBvCG,EAAAA,SAAS,EAAE;AACTH,IAAAA,QAAQ,EAAE,MADD;AAETI,IAAAA,UAAU,EAAE,GAFH;AAGTR,IAAAA,KAAK,EAAE,MAHE;AAIT,KAACL,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,QAAQ,EAAE;AADoB;AAJvB,GArB4B;AA6BvCK,EAAAA,OAAO,EAAE;AACPV,IAAAA,eAAe,EAAE;AADV,GA7B8B;AAgCvCW,EAAAA,SAAS,EAAE;AACT,KAACf,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC,CAC9B;AAD8B;AADvB;AAhC4B,CAAZ,CAAD,CAA5B;;AAsCA,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAACiC,KAAK,CAACI,CAAN,CAAQC,MAAT,CAAtC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBxC,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMyC,YAAY,GAAIC,KAAD,IAAW,MAAM;AACpC,QAAIC,UAAU,GAAG,CAAC,GAAGR,OAAJ,CAAjB;AAEA,QAAIS,GAAG,GAAG,CAAC,GAAGL,MAAJ,CAAV;;AACA,QAAII,UAAU,CAACD,KAAD,CAAV,KAAsB,KAA1B,EAAiC;AAC/BC,MAAAA,UAAU,CAACD,KAAD,CAAV,GAAoB,IAApB;AACAE,MAAAA,GAAG,CAACC,IAAJ,CAASZ,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBJ,KAAjB,CAAT;AACD,KAHD,MAGO,IAAIC,UAAU,CAACD,KAAD,CAAV,KAAsB,IAAtB,IAA8BT,KAAK,CAACI,CAAN,CAAQC,MAAR,CAAeI,KAAf,MAA0B,KAA5D,EAAmE;AACxEC,MAAAA,UAAU,CAACD,KAAD,CAAV,GAAoB,KAApB;AACAE,MAAAA,GAAG,CAACG,MAAJ,CAAWH,GAAG,CAACI,OAAJ,CAAYf,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBJ,KAAjB,CAAZ,CAAX,EAAiD,CAAjD;AACD;;AAEDF,IAAAA,SAAS,CAACI,GAAD,CAAT;AACAR,IAAAA,UAAU,CAACO,UAAD,CAAV;AACD,GAdD;;AAeA,QAAMM,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAnB,IAAAA,KAAK,CAACoB,IAAN,CAAW;AAAEC,MAAAA,GAAG,EAAErB,KAAK,CAACqB,GAAb;AAAkBC,MAAAA,GAAG,EAAEtB,KAAK,CAACI,CAAN,CAAQmB,EAA/B;AAAmCV,MAAAA,QAAQ,EAAEP;AAA7C,KAAX;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEpC,KAA3B;AAAkC,MAAA,SAAS,EAAE+B,OAAO,CAACH,SAArD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,OAAO,CAACuB,KAA1B;AAAiC,sBAAW,cAA5C;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,EAAEvB,OAAO,CAACJ,OAA7B;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEI,OAAO,CAACN,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,SAAD;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEM,OAAO,CAACN,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,SAAD;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEM,OAAO,CAACN,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,SAAD;AAAA,oBACGK,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBY,GAAjB,CAAsBhB,KAAD,IAAW;AAC/B,gCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA,uCACE;AAAG,kBAAA,SAAS,EAAER,OAAO,CAACZ,KAAtB;AAA6B,kBAAA,IAAI,EAAEoB,KAAnC;AAA0C,kBAAA,MAAM,EAAC,QAAjD;AAAA,yCACE,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAER,OAAO,CAACV,IAA3B;AAAA,2CACE,QAAC,UAAD;AAAA,iCACG,GADH,EAEGS,KAAK,CAACI,CAAN,CAAQsB,KAAR,CAAc1B,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBE,OAAjB,CAAyBN,KAAzB,CAAd,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE,QAAC,SAAD;AAAA,uCACE,QAAC,UAAD;AAAA,4BACGT,KAAK,CAACI,CAAN,CAAQuB,OAAR,CAAgB3B,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBE,OAAjB,CAAyBN,KAAzB,CAAhB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF,eAgBE,QAAC,SAAD;AAAA,uCACE,QAAC,QAAD;AACE,kBAAA,IAAI,EAAC,KADP;AAEE,kBAAA,QAAQ,EAAED,YAAY,CAACR,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBE,OAAjB,CAAyBN,KAAzB,CAAD,CAFxB;AAGE,kBAAA,OAAO,EAAEP,OAAO,CAACF,KAAK,CAACI,CAAN,CAAQS,QAAR,CAAiBE,OAAjB,CAAyBN,KAAzB,CAAD;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AA0BD,WA3BA;AADH;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAgDE;AAAA;AAAA;AAAA;AAAA,YAhDF,eAiDE;AAAA;AAAA;AAAA;AAAA,YAjDF,eAkDE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,EAAE,EAAE,EAAzB;AAA6B,MAAA,EAAE,EAAE,EAAjC;AAAqC,MAAA,cAAc,EAAC,QAApD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAER,OAAO,CAACf,GAA3B;AAAgC,QAAA,OAAO,EAAE8B,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD;;GAjFQjB,S;UACSjB,S;;;KADTiB,S;AAmFT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wi: {\r\n    border: \"1px solid black\",\r\n  },\r\n  btn: {\r\n    backgroundColor: \"#8739f9\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#f50057\",\r\n    },\r\n    color: \"#fff\",\r\n  },\r\n  anchr: {\r\n    textDecoration: \"none\",\r\n  },\r\n  btn2: {\r\n    fontSize: \"18px\",\r\n    \r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  tablehead: {\r\n    fontSize: \"20px\",\r\n    fontWeight: 600,\r\n    color: \"#fff\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"10px\",\r\n    },\r\n  },\r\n  headrow: {\r\n    backgroundColor: \"#8739f9\",\r\n  },\r\n  tablesize: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // maxWidth: \"300px\",\r\n    },\r\n  },\r\n}));\r\nfunction Diagtable(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(props.x.status);\r\n  const [tosend, setTosend] = useState([]);\r\n  const handleToggle = (value) => () => {\r\n    var newChecked = [...checked];\r\n\r\n    var tos = [...tosend];\r\n    if (newChecked[value] === false) {\r\n      newChecked[value] = true;\r\n      tos.push(props.x.problems[value]);\r\n    } else if (newChecked[value] === true && props.x.status[value] === false) {\r\n      newChecked[value] = false;\r\n      tos.splice(tos.indexOf(props.x.problems[value]), 1);\r\n    }\r\n\r\n    setTosend(tos);\r\n    setChecked(newChecked);\r\n  };\r\n  const handleClick = () => {\r\n    window.location.reload();\r\n    props.mark({ uid: props.uid, day: props.x.id, problems: tosend });\r\n  };\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper} className={classes.tablesize}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableBody>\r\n            <TableRow className={classes.headrow}>\r\n              <TableCell>\r\n                <Typography className={classes.tablehead}>Problems</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography className={classes.tablehead}>Rating</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography className={classes.tablehead}>status</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n          <TableBody>\r\n            {props.x.problems.map((value) => {\r\n              return (\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <a className={classes.anchr} href={value} target=\"_blank\">\r\n                      <Button className={classes.btn2}>\r\n                        <Typography>\r\n                          {\" \"}\r\n                          {props.x.names[props.x.problems.indexOf(value)]}\r\n                        </Typography>\r\n                      </Button>\r\n                    </a>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {props.x.ratings[props.x.problems.indexOf(value)]}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Checkbox\r\n                      edge=\"end\"\r\n                      onChange={handleToggle(props.x.problems.indexOf(value))}\r\n                      checked={checked[props.x.problems.indexOf(value)]}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <br />\r\n      <br />\r\n      <Grid container item xs={12} sm={12} justifyContent=\"center\">\r\n        <Button className={classes.btn} onClick={handleClick}>\r\n          Submit\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Diagtable;\r\n"]},"metadata":{},"sourceType":"module"}